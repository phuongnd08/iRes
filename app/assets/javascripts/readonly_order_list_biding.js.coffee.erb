highlightedOrderLI = null

unhighlightOrder = (li) ->
  $(li).attr('style', '')

highlightOrderLI = (li) ->
  unhighlightOrder(highlightedOrderLI) if highlightedOrderLI
  $(li).attr('style', 'border: 2px solid yellow')
  highlightedOrderLI = li

ordersChannel = <%= Order.channel.to_json %>

pageVars = (role) ->
  window["$#{role}Vars"] ||= {}

viewerRole = (page) ->
  $(page).attr("data-viewer-role")

$(document).delegate '.navigator_page', "pagecreate", ->
  role = viewerRole(this)
  vars = pageVars(role)

  ordersUL = =>
    $(this).find('#orders')

  orderLI = (order)->
    ordersUL().find('[data-order-id=' + order.order_id + ']')

  focusedDate = $(this).attr('data-date')
  revenueSpan = $(this).find('.collected_revenue')

  revenue = (newRevenue) ->
    if typeof newRevenue == "number"
      revenueSpan.text(newRevenue.toString())
    else
      parseInt(revenueSpan.text())

  processOrders = (orders, withEffect = true) ->
    removeFunction = if withEffect then "fadeOutAndRemove" else "remove"
    lastAddedOrUpdatedOrder = null
    for order in orders
      if order.created_on == focusedDate
        if order.deleted || !order.shown_to[role]
          orderLI(order)[removeFunction]()
        else
          addOrUpdate(lastAddedOrUpdatedOrder = order)
          revenue(revenue() + order.revenue_increment)

    if lastAddedOrUpdatedOrder
      ordersUL().listview('refresh').trigger('create')
      formatAllListItems()
      if withEffect
        highlightOrderLI orderLI(lastAddedOrUpdatedOrder)
        orderLI(order).blinkAndShow()

  addOrUpdate = (order) ->
    if order.paid
      $.toast order.order_name, I18n.t("states.paid")
    else
      if order.ready && !order.served
        $.toast order.order_name, I18n.t("states.ready")
    if (orderLI(order).exists())
      orderLI(order).replaceWith(orderTemplate.gsub order)
    else
      $(orderTemplate.gsub order).appendTo(ordersUL())

  formatAllListItems = ->
    for li in ordersUL().find('li[data-order-id]')
      $(li).formatListItem()

  formatAllListItems()

  if window.Faye && Faye.Client
    vars.pubSubClient = new Faye.Client(<%= ServicesSettings.pubsub.mount_point.to_json %>)
    vars.pubSubClient.subscribe ordersChannel, (order) ->
      if vars.visible
        processOrders([order])
      else
        vars.backlog.push order

  $(this).bind "pageshow", ->
    vars.visible = true
    processOrders(vars.backlog, false) if vars.backlog

  $(this).bind "pagehide", ->
    vars.visible = false
    vars.backlog = []
